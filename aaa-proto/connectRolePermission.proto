syntax = "proto3";

package pb;
option go_package = "github.com/kisanlink/protobuf/pb";

message ConnUser {
    string id = 1;
    string username = 2;
    string password = 3;
    bool is_validated = 4;
    string created_at = 5;
    string updated_at = 6;
    repeated ConnUserRole user_roles = 7;
    string aadhaar_number = 8;
    string status = 9;
    string name = 10;
    string care_of = 11;
    string full_address = 12;
    string date_of_birth = 13;
    string photo = 14;
    string email_hash = 15;
    string share_code = 16;
    string year_of_birth = 17;
    string message = 18;
    string address_id = 19;
}

message ConnRole {
    string id = 1;
    string name = 2;
    string description = 3;
    string source = 4;
    string created_at = 5;
    string updated_at = 6;
}

message ConnPermission {
    string id = 1;         
    string name = 2;       
    string description = 3;
    string action = 4; 
    string source = 5; 
    string resource = 6; 
    string valid_start_time = 7;
    string valid_end_time = 8;
    string created_at = 9;
    string updated_at = 10;
}

message ConnRolePermission {
    string id = 1;
    string created_at = 2;
    string updated_at = 3;
    string role_id = 4;
    ConnRole role = 5;
    string permission_id = 6;
    repeated ConnPermission permission = 7;
    repeated ConnUserRole user_roles = 8;
    bool is_active = 9; 
}

message RolePermissionConn {
    string id = 1;
    string created_at = 2;
    string updated_at = 3;
    string role_id = 4;
    ConnRole role = 5;
    string permission_id = 6;
    ConnPermission permission = 7;
    repeated ConnUserRole user_roles = 8;
    bool is_active = 9; 
}

message ConnUserRole {
    string id = 1;
    string created_at = 2;
    string updated_at = 3;
    ConnUser user = 4;
    string role_permission_id = 5;
}

message CreateConnRolePermissionRequest {
    string roles = 1;
    repeated string permissions = 2;
}

message CreateConnRolePermissionResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    repeated ConnRolePermission data = 4;
}

message GetConnRolePermissionallRequest {}

message GetConnRolePermissionallResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    repeated ConnRolePermission data = 4;
}

message GetConnRolePermissionByIdRequest {
    string id = 1;
}

message GetConnRolePermissionByIdResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    RolePermissionConn data = 4;
}

message UpdateConnRolePermissionRequest {
    string id = 1;
    repeated string roles = 2;
    repeated string permissions = 3;
}

message UpdateConnRolePermissionResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    repeated ConnRolePermission data = 4;
}

message DeleteConnRolePermissionRequest {
    string role = 1;
}

message DeleteConnRolePermissionResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
}

message GetRolePermissionByRoleNameRequest {
    string role = 1;
}

message GetRolePermissionByRoleNameResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    ConnRolePermission data = 4;
}

service ConnectRolePermissionService {
    rpc AssignPermission(CreateConnRolePermissionRequest) returns (CreateConnRolePermissionResponse);
    rpc GetAllRolePermission(GetConnRolePermissionallRequest) returns (GetConnRolePermissionallResponse);
    rpc GetRolePermissionById(GetConnRolePermissionByIdRequest) returns (GetConnRolePermissionByIdResponse);
    rpc UpdateRolePermission(UpdateConnRolePermissionRequest) returns (UpdateConnRolePermissionResponse);
    rpc DeleteRolePermission(DeleteConnRolePermissionRequest) returns (DeleteConnRolePermissionResponse);
    rpc GetRolePermissionByRoleName(GetRolePermissionByRoleNameRequest) returns (GetRolePermissionByRoleNameResponse);
}
