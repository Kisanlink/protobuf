syntax = "proto3";

package pb;

option go_package = "github.com/kisanlink/protobuf/pb";

message UserRole {
    string id = 1;
    string user_id = 2;
    string role_id = 3;
    string created_at = 4;
    string updated_at = 5;
}
message PermissionResponse {
    string name = 1;  // Changed to start from 1 (standard practice)      
    string description = 2;
    string action = 3; 
    string source = 4; 
    string resource = 5; 
}

message RolePermissions {
  repeated PermissionResponse permissions = 1;
}

message RolePermissionMap {
  map<string, RolePermissions> role_permissions = 1;
}
message AssignRolePermission {
    string id = 1;
    string username = 2;
    string password = 3;
    bool is_validated = 4;
    string created_at = 5;
    string updated_at = 6;
    RolePermissionMap role_permissions = 7;  // Changed to field number 7

}
message User {
    string id = 1;
    string username = 2;
    string password = 3;
    bool is_validated = 4;
    string created_at = 5;
    string updated_at = 6;
    // repeated UserRole user_roles = 7;
    string aadhaar_number = 8;
    string status = 9;
    string name = 10;
    string care_of = 11;
    string date_of_birth = 12;
    string photo = 13;
    string email_hash = 14;
    string share_code = 15;
    string year_of_birth = 16;
    string message = 17;
    uint64 mobile_number = 18;
    string country_code = 19;
    Address address = 20;
    RolePermissionMap role_permissions = 21;
}

message Address {
    string id = 1;
    string house = 2;
    string street = 3;
    string landmark = 4;
    string post_office = 5;
    string subdistrict = 6;
    string district = 7;
    string vtc = 8;
    string state = 9;
    string country = 10;
    string pincode = 11;
    string full_address = 12;
    string created_at = 13;
    string updated_at = 14;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    AssignRolePermission data = 4;
    string data_time_stamp = 5;
}

message CreateUserRequest {
    string username = 1;
    string password = 2;
    string aadhaar_number = 3;
    string country_code = 4;
    uint64 mobile_number = 5; 
}

message AadhaarOTPResponse {
    int64 timestamp = 1;
    string transaction_id = 2;
    string entity = 3;
    string otp_message = 4;
    string reference_id = 5;
    int32 status_code = 6;
    bool success = 7;
}

message MinimalUser {
    string id = 1;
    string username = 2;
    string password = 3;
    bool is_validated = 4;
    string country_code = 5;
    uint64 mobile_number = 6; 
    string created_at = 7;
    string updated_at = 8;
    AadhaarOTPResponse otp_response = 9;

}

message CreateUserResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    MinimalUser data = 4;
    string data_time_stamp =5;
}

message GetUserRequest {}

message GetUserResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    repeated User data = 4;
    string data_time_stamp =5;

}

message UpdateUserRequest {
    string id = 1;
    string username = 2;
    string aadhaar_number = 3;
    string status = 4;
    string name = 5;
    string care_of = 6;
    string date_of_birth = 7;
    string photo = 8;
    string email_hash = 9;
    string share_code = 10;
    string year_of_birth = 11;
    string message = 12;
    uint64 mobile_number = 13;
    Address address = 14;
}

message UpdateUserResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    User data = 4;
    string data_time_stamp =5;
}

message DeleteUserRequest {
    string id = 1;
}

message DeleteUserResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    string data_time_stamp = 4;
}

message GetUserByIdRequest {
    string id = 1;
}

message GetUserByIdResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    User data = 4;
    string data_time_stamp =5;
}

message ValidateUserRequest {
    bool is_validated = 1;
    string aadhaar_number = 2;
    string status = 3;
    string name = 4;
    string care_of = 5;
    string full_address = 6;
    string date_of_birth = 7;
    string photo = 8;
    string email_hash = 9;
    string share_code = 10;
    string year_of_birth = 11;
    string message = 12;
    uint64 mobile_number = 13;
    Address address = 14;
    string country_code = 15;
}

message ValidateUserResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    User data = 4;
    string data_time_stamp =5;
}

message CheckPermissionRequest {
    string principal = 1;
    string source = 2;
    repeated string actions = 3;
}

message CheckPermissionResponse {
    int32 status_code = 1;
    string message = 2;
    bool success = 3;
    // map<string, bool> roles = 4;
    map<string, bool> permissions = 4;
    map<string, bool> actions = 5;
    string data_time_stamp = 6;

}

message AssignRoleToUserRequest {
    string userId = 1;
    string role = 2;
}

message AssignRoleToUserResponse {
    int32 status_code = 1;
    bool success = 2;
    string message = 3;
    AssignRolePermission data = 4;
    string data_time_stamp = 5;
}
message CheckAadhaarExistRequest {
    string aadhaar_number= 1;
}
message CheckAadhaarExistResponse {
    int32 status_code = 1;
    string message = 2;
    bool  isExist= 3;
}



service UserService {
    rpc RegisterUser(CreateUserRequest) returns (CreateUserResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc CheckUserPermission(CheckPermissionRequest) returns (CheckPermissionResponse);
    rpc ValidateUser(ValidateUserRequest) returns (ValidateUserResponse);
    rpc AssignRole(AssignRoleToUserRequest) returns (AssignRoleToUserResponse);
    rpc CheckAadhaarExist(CheckAadhaarExistRequest) returns (CheckAadhaarExistResponse);
}
